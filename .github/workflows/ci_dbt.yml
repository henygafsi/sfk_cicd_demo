
  name: dbt Snowflake Pipeline

  on:
    push:
      branches:
        - main
    pull_request:
      branches:
        - main
  jobs:
    dev:
      runs-on: ubuntu-latest
      env:
        ENVIRONMENT: dev
        SNOWFLAKE_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
        SNOWFLAKE_USER: ${{ secrets.SF_USERNAME }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}
        SNOWFLAKE_ROLE: ${{ secrets.SF_ROLE }}
        SNOWFLAKE_DATABASE: ${{ secrets.SF_DATABASE }}
        SNOWFLAKE_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
        DBT_FOLDER: dbt_project_demo
        DBT_PROFILE: dbt_ci_profile
  
      steps:
        - name: Checkout repository
          uses: actions/checkout@v2

        - name: Use Python 3.8.x
          uses: actions/setup-python@v2.2.1
          with:
            python-version: 3.8.x
    
        - name: Configure dbt profiles.yml
          run: |
            pip install dbt-snowflake
            echo "default:" >> ~/.dbt/profiles.yml
            echo "  outputs:" >> ~/.dbt/profiles.yml
            echo "    dev:" >> ~/.dbt/profiles.yml
            echo "      type: snowflake" >> ~/.dbt/profiles.yml
            echo "      account: ${{ secrets.DEV_SNOWFLAKE_ACCOUNT }}" >> ~/.dbt/profiles.yml
            echo "      user: ${{ secrets.DEV_SNOWFLAKE_USER }}" >> ~/.dbt/profiles.yml
            echo "      password: ${{ secrets.DEV_SNOWFLAKE_PASSWORD }}" >> ~/.dbt/profiles.yml
            echo "      role: ${{ secrets.DEV_SNOWFLAKE_ROLE }}" >> ~/.dbt/profiles.yml
            echo "      database: ${{ secrets.DEV_SNOWFLAKE_DATABASE }}" >> ~/.dbt/profiles.yml
            echo "      warehouse: ${{ secrets.DEV_SNOWFLAKE_WAREHOUSE }}" >> ~/.dbt/profiles.yml
            echo "      schema: ${{ secrets.DEV_SNOWFLAKE_SCHEMA }}" >> ~/.dbt/profiles.yml
  
        - name: Run dbt
          env:
            DBT_PROFILES_DIR: /Users/henygafsi/.dbt/profiles.yml
          run: |
              dbt debug --profiles-dir . --profile $DBT_PROFILE --target dev
              dbt run --select dbt_project_demo

    staging:
      runs-on: ubuntu-latest
      env:
        ENVIRONMENT: staging
        SNOWFLAKE_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
        SNOWFLAKE_USER: ${{ secrets.SF_USERNAME }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}
        SNOWFLAKE_ROLE: ${{ secrets.SF_ROLE }}
        SNOWFLAKE_DATABASE: ${{ secrets.SF_DATABASE }}
        SNOWFLAKE_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
  
      steps:
        - name: Checkout repository
          uses: actions/checkout@v2
  
        - name: Install dependencies
          run: |
            pip install dbt-snowflake
  
        - name: Configure dbt profiles.yml
          run: |
            echo "default:" >> ~/.dbt/profiles.yml
            echo "  outputs:" >> ~/.dbt/profiles.yml
            echo "    staging:" >> ~/.dbt/profiles.yml
            echo "      type: snowflake" >> ~/.dbt/profiles.yml
            echo "      account: ${{ secrets.STAGING_SNOWFLAKE_ACCOUNT }}" >> ~/.dbt/profiles.yml
            echo "      user: ${{ secrets.STAGING_SNOWFLAKE_USER }}" >> ~/.dbt/profiles.yml
            echo "      password: ${{ secrets.STAGING_SNOWFLAKE_PASSWORD }}" >> ~/.dbt/profiles.yml
            echo "      role: ${{ secrets.STAGING_SNOWFLAKE_ROLE }}" >> ~/.dbt/profiles.yml
            echo "      database: ${{ secrets.STAGING_SNOWFLAKE_DATABASE }}" >> ~/.dbt/profiles.yml
            echo "      warehouse: ${{ secrets.STAGING_SNOWFLAKE_WAREHOUSE }}" >> ~/.dbt/profiles.yml
            echo "      schema: ${{ secrets.STAGING_SNOWFLAKE_SCHEMA }}" >> ~/.dbt/profiles.yml
  
        - name: Run dbt
          env:
            DBT_PROFILES_DIR: ~/.dbt
          run: |
            dbt debug --profiles-dir . --profile $DBT_PROFILE
            dbt run --select dbt_project_demo
  
    production:
      needs: staging
      runs-on: ubuntu-latest
      env:
        ENVIRONMENT: production
        SNOWFLAKE_ACCOUNT: ${{ secrets.PRODUCTION_SNOWFLAKE_ACCOUNT }}
        SNOWFLAKE_USER: ${{ secrets.PRODUCTION_SNOWFLAKE_USER }}
        SNOWFLAKE_PASSWORD: ${{ secrets.PRODUCTION_SNOWFLAKE_PASSWORD }}
        SNOWFLAKE_ROLE: ${{ secrets.PRODUCTION_SNOWFLAKE_ROLE }}
        SNOWFLAKE_DATABASE: ${{ secrets.PRODUCTION_SNOWFLAKE_DATABASE }}
        SNOWFLAKE_WAREHOUSE: ${{ secrets.PRODUCTION_SNOWFLAKE_WAREHOUSE }}
        SNOWFLAKE_SCHEMA: ${{ secrets.PRODUCTION_SNOWFLAKE_SCHEMA }}
  
      steps:
        - name: Checkout repository
          uses: actions/checkout@v2
  
        - name: Install dependencies
          run: |
            pip install dbt-snowflake
  
        - name: Configure dbt profiles.yml
          run: |
            mkdir -p ~/.dbt
            echo "default:" >> ~/.dbt/profiles.yml
            echo "  outputs:" >> ~/.dbt/profiles.yml
            echo "    production:" >> ~/.dbt/profiles.yml
            echo "      type: snowflake" >> ~/.dbt/profiles.yml
            echo "      account: ${{ secrets.PRODUCTION_SNOWFLAKE_ACCOUNT }}" >> ~/.dbt/profiles.yml
            echo "      user: ${{ secrets.PRODUCTION_SNOWFLAKE_USER }}" >> ~/.dbt/profiles.yml
            echo "      password: ${{ secrets.PRODUCTION_SNOWFLAKE_PASSWORD }}" >> ~/.dbt/profiles.yml
            echo "      role: ${{ secrets.PRODUCTION_SNOWFLAKE_ROLE }}" >> ~/.dbt/profiles.yml
            echo "      database: ${{ secrets.PRODUCTION_SNOWFLAKE_DATABASE }}" >> ~/.dbt/profiles.yml
            echo "      warehouse: ${{ secrets.PRODUCTION_SNOWFLAKE_WAREHOUSE }}" >> ~/.dbt/profiles.yml
            echo "      schema: ${{ secrets.PRODUCTION_SNOWFLAKE_SCHEMA }}" >> ~/.dbt/profiles.yml
  
        - name: Run dbt
          env:
            DBT_PROFILES_DIR: ~/.dbt
          run: |
            dbt run --profiles-dir $DBT_PROFILES_DIR
  
