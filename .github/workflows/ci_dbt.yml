
  name: dbt Snowflake Pipeline

  on:
    push:
      branches:
        - main
    pull_request:
      branches:
        - main
  jobs:
    dev:
      runs-on: ubuntu-latest
      env:
        ENVIRONMENT: dev
        SNOWFLAKE_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
        SNOWFLAKE_USER: ${{ secrets.SF_USERNAME }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}
        SNOWFLAKE_ROLE: ${{ secrets.SF_ROLE }}
        SNOWFLAKE_DATABASE: ${{ secrets.SF_DATABASE }}
        SNOWFLAKE_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
        DBT_PROFILE: dbt_ci_profile
        DBT_FOLDER: dbt_project_demo
      steps:
        - name: Checkout repository
          uses: actions/checkout@v2
  
        - name: Install dependencies
          run: |
            pip install dbt-snowflake
  
        - name: Configure dbt profiles.yml
          run: |
            mkdir -p ~/.dbt
            echo "default:" >> ~/.dbt/profiles.yml
            echo "  outputs:" >> ~/.dbt/profiles.yml
            echo "    production:" >> ~/.dbt/profiles.yml
            echo "      type: snowflake" >> ~/.dbt/profiles.yml
            echo "      account: ${{ secrets.PRODUCTION_SNOWFLAKE_ACCOUNT }}" >> ~/.dbt/profiles.yml
            echo "      user: ${{ secrets.PRODUCTION_SNOWFLAKE_USER }}" >> ~/.dbt/profiles.yml
            echo "      password: ${{ secrets.PRODUCTION_SNOWFLAKE_PASSWORD }}" >> ~/.dbt/profiles.yml
            echo "      role: ${{ secrets.PRODUCTION_SNOWFLAKE_ROLE }}" >> ~/.dbt/profiles.yml
            echo "      database: ${{ secrets.PRODUCTION_SNOWFLAKE_DATABASE }}" >> ~/.dbt/profiles.yml
            echo "      warehouse: ${{ secrets.PRODUCTION_SNOWFLAKE_WAREHOUSE }}" >> ~/.dbt/profiles.yml
            echo "      schema: ${{ secrets.PRODUCTION_SNOWFLAKE_SCHEMA }}" >> ~/.dbt/profiles.yml
  
        - name: Run dbt
          env:
            DBT_PROFILES_DIR: ~/.dbt
          run: |
            cd $DBT_FOLDER
            dbt deps
            dbt compile --profiles-dir . --profile $DBT_PROFILE --target dev
            dbt run --select -m my_first_dbt_model --profiles-dir . --profile $DBT_PROFILE --target dev
    tst:
      needs: dev
      runs-on: ubuntu-latest
      env:
        ENVIRONMENT: tst
        SNOWFLAKE_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
        SNOWFLAKE_USER: ${{ secrets.SF_USERNAME }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}
        SNOWFLAKE_ROLE: ${{ secrets.SF_ROLE }}
        SNOWFLAKE_DATABASE: ${{ secrets.SF_DATABASE }}
        SNOWFLAKE_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
        DBT_PROFILE: dbt_ci_profile
        DBT_FOLDER: dbt_project_demo
      steps:
        - name: Checkout repository
          uses: actions/checkout@v2
  
        - name: Install dependencies
          run: |
            pip install dbt-snowflake
  
        - name: Configure dbt profiles.yml
          run: |
            mkdir -p ~/.dbt
            echo "default:" >> ~/.dbt/profiles.yml
            echo "  outputs:" >> ~/.dbt/profiles.yml
            echo "    production:" >> ~/.dbt/profiles.yml
            echo "      type: snowflake" >> ~/.dbt/profiles.yml
            echo "      account: ${{ secrets.SF_ACCOUNT }}" >> ~/.dbt/profiles.yml
            echo "      user: ${{ secrets.PRODUCTION_SNOWFLAKE_USER }}" >> ~/.dbt/profiles.yml
            echo "      password: ${{ secrets.PRODUCTION_SNOWFLAKE_PASSWORD }}" >> ~/.dbt/profiles.yml
            echo "      role: ${{ secrets.PRODUCTION_SNOWFLAKE_ROLE }}" >> ~/.dbt/profiles.yml
            echo "      database: ${{ secrets.PRODUCTION_SNOWFLAKE_DATABASE }}" >> ~/.dbt/profiles.yml
            echo "      warehouse: ${{ secrets.PRODUCTION_SNOWFLAKE_WAREHOUSE }}" >> ~/.dbt/profiles.yml
            echo "      schema: ${{ secrets.PRODUCTION_SNOWFLAKE_SCHEMA }}" >> ~/.dbt/profiles.yml
  
        - name: Run dbt
          env:
            DBT_PROFILES_DIR: ~/.dbt
          run: |
            cd $DBT_FOLDER
            dbt deps
            dbt compile --profiles-dir . --profile $DBT_PROFILE --target tst
            dbt run --exclude -m empty_table --profiles-dir . --profile $DBT_PROFILE --exclude example.* --target tst
            
    prd:
      runs-on: ubuntu-latest
      needs: tst
      env:
        ENVIRONMENT: prd
        SNOWFLAKE_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
        SNOWFLAKE_USER: ${{ secrets.SF_USERNAME }}
        SNOWFLAKE_PASSWORD: ${{ secrets.SF_PASSWORD }}
        SNOWFLAKE_ROLE: ${{ secrets.SF_ROLE }}
        SNOWFLAKE_DATABASE: ${{ secrets.SF_DATABASE }}
        SNOWFLAKE_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
        DBT_PROFILE: dbt_ci_profile
        DBT_FOLDER: dbt_project_demo
      steps:
        - name: Checkout repository
          uses: actions/checkout@v2
  
        - name: Install dependencies
          run: |
            pip install dbt-snowflake
  
        - name: Configure dbt profiles.yml
          run: |
            mkdir -p ~/.dbt
            echo "default:" >> ~/.dbt/profiles.yml
            echo "  outputs:" >> ~/.dbt/profiles.yml
            echo "    production:" >> ~/.dbt/profiles.yml
            echo "      type: snowflake" >> ~/.dbt/profiles.yml
            echo "      account: ${{ secrets.SF_ACCOUNT }}" >> ~/.dbt/profiles.yml
            echo "      user: ${{ secrets.PRODUCTION_SNOWFLAKE_USER }}" >> ~/.dbt/profiles.yml
            echo "      password: ${{ secrets.PRODUCTION_SNOWFLAKE_PASSWORD }}" >> ~/.dbt/profiles.yml
            echo "      role: ${{ secrets.PRODUCTION_SNOWFLAKE_ROLE }}" >> ~/.dbt/profiles.yml
            echo "      database: ${{ secrets.PRODUCTION_SNOWFLAKE_DATABASE }}" >> ~/.dbt/profiles.yml
            echo "      warehouse: ${{ secrets.PRODUCTION_SNOWFLAKE_WAREHOUSE }}" >> ~/.dbt/profiles.yml
            echo "      schema: ${{ secrets.PRODUCTION_SNOWFLAKE_SCHEMA }}" >> ~/.dbt/profiles.yml
  
        - name: Run dbt
          env:
            DBT_PROFILES_DIR: ~/.dbt
          run: |
            cd $DBT_FOLDER
            dbt deps
            dbt compile --profiles-dir . --profile $DBT_PROFILE --target prd
            dbt run  --exclude -m empty_table --profiles-dir . --profile $DBT_PROFILE --target prd
            dbt snapshot --select dim_customer_snapshot  --profiles-dir . --profile $DBT_PROFILE --target prd











